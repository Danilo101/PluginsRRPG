<?xml version="1.0" encoding="UTF-8"?>
<popupForm name="frmGeneratorOptions" width="300" height="300" drawContainer="true" resizable="true" placement="center"
		   cancelable="false">
 		   
	<import file="interfaceUtils.xml"/>
	<style>
		flowPart.optionPart {
			height: 30;
			minWidth: 50;
			maxWidth: 5000;
			margins: {left=2, right=2, top=2, bottom=2};
		}
		
		.itemTitle {
			align: left;
			width: 110;
			autoSize: false;
			horzTextAlign: trailing;	
			vertTextAlign: center;
			margins:{right=5};
		}
		
		.itemContent {
			align: client;
			margins:{right=5};
		}
		
		.groupTitle {
			align: left;						
			autoSize: true;
			wordWrap: false;
			horzTextAlign: leading;	
			vertTextAlign: center;
			margins:{left=10, right=5};		
			fontSize: 15;
			fontColor: #FFCC66;
		}
		
	</style>
			
	<script>
		require("system.lua");
		require("rrpgScene_Undo.dlua");
		local scene = nil;	
		local ignoreRecalcWH = false;
		local realCellWidth = 1;
		local realCellHeight = 1;
		local offsetCellsW = 1;
		local offsetCellsH = 1;
		local exibindoFOW = false;
		
		if not System.isMobile() then
			self.height = 450;
		end;
	</script>	
	
	<template name="option">
		<label left="10" top="$(top)" width="120" height="25" text="$(text)" hitTest="true" hint="$(hint)" horzTextAlign="trailing"/>
		<edit left="140" top="$(top)" width="50" height="25" name="$(field)" type="number"/>
	</template>

	<scrollBox align="client">
		<label text="Gerador de Masmorras" align="top" margins="{left=10, right=5}" fontSize="15" fontColor="#FFCC66"/>
		<horzLine align="top" strokeColor="#FFCC6670" margins="{left=10}"/>	

		<option top="30" text="Maximo de Salas" field="salas" hint="Quantidade Maxima de Salas."/>
		<option top="55" text="Tamanho Maximo" field="tamMax" hint="Tamanho maximo da sala (min. 4)"/>
		<option top="80" text="Tamanho Minimo" field="tamMin" hint="Tamanho minimo da sala (min. 3)"/>
		<option top="105" text="Entradas" field="entradas" hint="Quantidade de entradas"/>
		<option top="130" text="Escadas" field="escadas" hint="Quantidade de escadas"/>
		<option top="155" text="Becos" field="becos" hint="Quantidade de becos"/>
	</scrollBox>
			
	<BottomActionCancelPopupPanel actionClick="self:processarOK()" cancelClick="self:processarCancel()"/>
	
	<script><![CDATA[
		function self:prepareForShow(oScene)
			scene = oScene;
		end;


		function self:processarOK()	
			scene.bkgColor = "black";	
			scene.grid.gridColor = "gray";

			-- Inicializando variaveis uteis
			local size = scene.grid.cellSize;
			local horzSquare = scene.worldWidth/size;
			local vertSquare = scene.worldHeight/size;

			local centros = {};
			local centrosNum = 1;
			local map = {};
			for i=1, horzSquare, 1 do
				map[i] = {};
				for j=1, vertSquare, 1 do
					map[i][j] = "nada";
					-- Marcar bordas do mapa
					if i==1 or j==1 or i==horzSquare or j==vertSquare then
						map[i][j] = "borda";
						local desenho = scene.items:addUserDrawing("background");
						desenho.x = (i-1) * size;
						desenho.y = (j-1) * size;

						local opGrafica = desenho.canvas:addPath();
						opGrafica.x = 0;
						opGrafica.y = 0; 
						opGrafica.width = 1;               
						opGrafica.height = 1;
						opGrafica.color = "blue";

						opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
					end;
				end;
			end;

			-- Pegando opções do usuario
			local salas = self.salas.asNumber or 1;
			local limit = (self.salas.asNumber or 1)*2;
			local tamMax = self.tamMax.asNumber or 4;
			if tamMax < 4 then
				tamMax = 4;
			end;
			local tamMin = self.tamMin.asNumber or 3;
			if tamMin < 3 then
				tamMin = 3;
			end;
			if tamMin > tamMax then
				tamMin = 3;
				tamMax = 4;
			end;
			local dif = tamMax - tamMin;
			local entradas = self.entradas.asNumber or 0;
			local escadas = self.escadas.asNumber or 0;
			local becos = self.becos.asNumber or 0;

			-- Gera entradas [ENTRADA]
			for i=1, entradas, 1 do
				local side = math.floor(math.random() * 4);
				local x = 0;
				local y = 0;
				if side == 0 then
					x = 1;
				elseif side == 1 then
					x = horzSquare;
				elseif side == 2 then
					y = 1;
				elseif side == 3 then
					y = vertSquare;
				end;

				if x == 0 then
					x = 2 + math.floor(math.random() * horzSquare);
				elseif y == 0 then
					y = 2 + math.floor(math.random() * vertSquare);
				end;
				if map[x][y] == "borda" then
					map[x][y] = "entrada";
					local desenho = scene.items:addUserDrawing("background");
					desenho.x = (x-1) * size;
					desenho.y = (y-1) * size;

					local opGrafica = desenho.canvas:addPath();
					opGrafica.x = 0;
					opGrafica.y = 0; 
					opGrafica.width = 1;               
					opGrafica.height = 1;
					opGrafica.color = "YellowGreen";

					opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";

					centros[centrosNum] = {x=x, y=y};
					centrosNum = centrosNum+1;
				end;
			end;

			-- Gerar Salas [SALA]
			for i=1, salas, 1 do
				local width = tamMin + math.floor(math.random() * dif);
				local height = tamMin + math.floor(math.random() * dif);
				local posx = 1 + math.floor(math.random() * (horzSquare-2));
				local posy = 1 + math.floor(math.random() * (vertSquare-2));
				local midx = math.ceil(width/2);
				local midy = math.ceil(height/2);

				-- Verificar se a posição vai colidir com outra sala
				local valid = true;
				for x=1, width, 1 do
					for y=1, height, 1 do
						if posx+x <= horzSquare and posy+y <= vertSquare and map[posx+x][posy+y]~="nada" then
							valid = false;
						end;
					end;
				end; 

				-- Gere a SALA e suas PAREDES
				if valid then
					for x=1, width, 1 do
						for y=1, height, 1 do
							-- Adiciona o chao
							if posx+x <= horzSquare-1 and posy+y <= vertSquare-1 and map[posx+x][posy+y]=="nada" then
								map[posx+x][posy+y] = "chao";
								local desenho = scene.items:addUserDrawing("background");
								desenho.x = (posx+x-1) * size;
								desenho.y = (posy+y-1) * size;

								local opGrafica = desenho.canvas:addPath();
								opGrafica.x = 0;
							    opGrafica.y = 0; 
							    opGrafica.width = 1;               
							    opGrafica.height = 1;

							    if x==midx and y==midy then
							    	opGrafica.color = "green";
							    	centros[centrosNum] = {x=posx+x, y=posy+y};
							    	centrosNum = centrosNum +1;
							    else
							    	opGrafica.color = "white";
							    end;
								
								opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
							end;

							-- Se quina topo esquerdo adiciona parede. 
							if x==1 and y==1 then
								if posx+x-1 >= 1 and posy+y-1 >= 1 and map[posx+x-1][posy+y-1]=="nada" then
									map[posx+x-1][posy+y-1] = "parede";
									local desenho = scene.items:addUserDrawing("background");
									desenho.x = (posx+x-2) * size;
									desenho.y = (posy+y-2) * size;

									local opGrafica = desenho.canvas:addPath();
									opGrafica.x = 0;
								    opGrafica.y = 0; 
								    opGrafica.width = 1;               
								    opGrafica.height = 1;
									opGrafica.color = "red";

									opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
								end;
							end;

							-- Se quina topo direito adiciona parede. 
							if x==width and y==1 then
								if posx+x+1 <= horzSquare and posy+y-1 >= 1 and map[posx+x+1][posy+y-1]=="nada" then
									map[posx+x+1][posy+y-1] = "parede";
									local desenho = scene.items:addUserDrawing("background");
									desenho.x = (posx+x) * size;
									desenho.y = (posy+y-2) * size;

									local opGrafica = desenho.canvas:addPath();
									opGrafica.x = 0;
								    opGrafica.y = 0; 
								    opGrafica.width = 1;               
								    opGrafica.height = 1;
									opGrafica.color = "red";

									opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
								end;
							end;

							-- Se quina inferior esquerda adiciona parede. 
							if x==1 and y==height then
								if posx+x-1 >= 1 and posy+y-1 <= vertSquare and map[posx+x-1][posy+y+1]=="nada" then
									map[posx+x-1][posy+y+1] = "parede";
									local desenho = scene.items:addUserDrawing("background");
									desenho.x = (posx+x-2) * size;
									desenho.y = (posy+y) * size;

									local opGrafica = desenho.canvas:addPath();
									opGrafica.x = 0;
								    opGrafica.y = 0; 
								    opGrafica.width = 1;               
								    opGrafica.height = 1;
									opGrafica.color = "red";

									opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
								end;
							end;

							-- Se quina inferior direita adiciona parede. 
							if x==width and y==height then
								if posx+x+1 <= horzSquare and posy+y+1 <= vertSquare and map[posx+x+1][posy+y+1]=="nada" then
									map[posx+x+1][posy+y+1] = "parede";
									local desenho = scene.items:addUserDrawing("background");
									desenho.x = (posx+x) * size;
									desenho.y = (posy+y) * size;

									local opGrafica = desenho.canvas:addPath();
									opGrafica.x = 0;
								    opGrafica.y = 0; 
								    opGrafica.width = 1;               
								    opGrafica.height = 1;
									opGrafica.color = "red";

									opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
								end;
							end;

							-- Se topo adiciona parede
							if y==1 then
								if posx+x >= 1 and posx+x <= horzSquare and posy+y-1 >= 1 and map[posx+x][posy+y-1]=="nada" then
									map[posx+x][posy+y-1] = "parede";
									local desenho = scene.items:addUserDrawing("background");
									desenho.x = (posx+x-1) * size;
									desenho.y = (posy+y-2) * size;

									local opGrafica = desenho.canvas:addPath();
									opGrafica.x = 0;
								    opGrafica.y = 0; 
								    opGrafica.width = 1;               
								    opGrafica.height = 1;
									opGrafica.color = "red";

									opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
								end;
							end;

							-- Se inferior adiciona parede
							if y==height then
								if posx+x >= 1 and posx+x <= horzSquare and posy+y+1 <= vertSquare and map[posx+x][posy+y+1]=="nada" then
									map[posx+x][posy+y+1] = "parede";
									local desenho = scene.items:addUserDrawing("background");
									desenho.x = (posx+x-1) * size;
									desenho.y = (posy+y) * size;

									local opGrafica = desenho.canvas:addPath();
									opGrafica.x = 0;
								    opGrafica.y = 0; 
								    opGrafica.width = 1;               
								    opGrafica.height = 1;
									opGrafica.color = "red";

									opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
								end;
							end;

							-- Se esquerda adiciona parede
							if x==1 then
								if posx+x-1 >= 1 and posy+y >= 1 and posy+y <=vertSquare and map[posx+x-1][posy+y]=="nada" then
									map[posx+x-1][posy+y] = "parede";
									local desenho = scene.items:addUserDrawing("background");
									desenho.x = (posx+x-2) * size;
									desenho.y = (posy+y-1) * size;

									local opGrafica = desenho.canvas:addPath();
									opGrafica.x = 0;
								    opGrafica.y = 0; 
								    opGrafica.width = 1;               
								    opGrafica.height = 1;
									opGrafica.color = "red";

									opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
								end;
							end;

							-- Se direita adiciona parede
							if x==width then
								if posx+x+1 <= horzSquare and posy+y >= 1 and posy+y <=vertSquare and map[posx+x+1][posy+y]=="nada" then
									map[posx+x+1][posy+y] = "parede";
									local desenho = scene.items:addUserDrawing("background");
									desenho.x = (posx+x) * size;
									desenho.y = (posy+y-1) * size;

									local opGrafica = desenho.canvas:addPath();
									opGrafica.x = 0;
								    opGrafica.y = 0; 
								    opGrafica.width = 1;               
								    opGrafica.height = 1;
									opGrafica.color = "red";

									opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
								end;
							end;
						end;
					end;
				else 
					salas = salas + 1;
					if salas > limit then
						i = 2 * salas;
					end;
				end;
			end;

			-- Gera becos [BECOS]
			local corredores = {};
			local corredoresNum = 0;
			for i=1, becos, 1 do
				local x = 2 + math.floor(math.random() * horzSquare);
				local y = 2 + math.floor(math.random() * vertSquare);

				if map[x]~=nil and map[x][y] == "nada" then
					map[x][y] = "corredor";
					local desenho = scene.items:addUserDrawing("background");
					desenho.x = (x-1) * size;
					desenho.y = (y-1) * size;

					local opGrafica = desenho.canvas:addPath();
					opGrafica.x = 0;
					opGrafica.y = 0; 
					opGrafica.width = 1;               
					opGrafica.height = 1;
					opGrafica.color = "pink";

					opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";

					centros[centrosNum] = {x=x, y=y};
					centrosNum = centrosNum+1;

					corredoresNum = corredoresNum +1;
					corredores[corredoresNum] = {x=x, y=y};
				elseif becos <= (self.becos.asNumber or 0) then
					becos = becos +1;
				end;
			end;


			-- Gera corredores [CORREDOR]
			centrosNum = centrosNum -2;

			-- Mistura a ordem das salas
			local counter = centrosNum;
			while counter > 1 do
		        local index = math.random(counter);
		        centros[index], centros[counter] = centros[counter], centros[index];
		        counter = counter - 1;
		    end

			for i=1, centrosNum, 1 do
				local x1 = centros[i].x;
				local x2 = centros[i+1].x;
				local y1 = centros[i].y;
				local y2 = centros[i+1].y;

				local horz = x2 - x1;
				local dirx = 0;
				if horz > 0 then
					dirx = 1;
				else 
					dirx = -1;
				end;
				horz = math.abs(horz);

				local vert = y2 - y1;
				local diry = 0;
				if vert > 0 then
					diry = 1;
				else 
					diry = -1;
				end;
				vert = math.abs(vert);

				--showMessage(horz .. "|" .. vert);

				local y = y1; 
				local expand = 0;
				local aux = 0;
				for j=1, horz, 1 do
					local x = x1 + (dirx * (j+aux));
					if map[x][y] == "parede" then
						if map[x + dirx][y] == "parede" and map[x + dirx + dirx][y] == "parede" then
							y = y + diry;
							y1 = y1 + diry;
							vert = vert - diry;
							aux = aux-2;
							horz = horz + 2;
							expand = expand +2;
						else
							map[x][y] = "porta";
							local desenho = scene.items:addUserDrawing("background");
							desenho.x = (x-1) * size;
							desenho.y = (y-1) * size;

							local opGrafica = desenho.canvas:addPath();
							opGrafica.x = 0;
							opGrafica.y = 0; 
							opGrafica.width = 1;               
							opGrafica.height = 1;
							opGrafica.color = "orange";

							opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
						end;
					elseif map[x][y] == "nada" then
						map[x][y] = "corredor";
						local desenho = scene.items:addUserDrawing("background");
						desenho.x = (x-1) * size;
						desenho.y = (y-1) * size;

						local opGrafica = desenho.canvas:addPath();
						opGrafica.x = 0;
						opGrafica.y = 0; 
						opGrafica.width = 1;               
						opGrafica.height = 1;
						opGrafica.color = "gold";

						opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";

						corredoresNum = corredoresNum +1;
						corredores[corredoresNum] = {x=x, y=y};
					end;
				end;
				horz = horz - expand;

				local x = x1 + (dirx * horz);
				local aux = 0;
				for j=1, vert, 1 do
					local y = y1 + (diry * (j+aux)); 
					if map[x][y] == "parede" then
						if map[x][y+diry] == "parede" and map[x][y+diry+diry] == "parede" then
							x = x + dirx;
							dirx = dirx * -1;
							aux = aux - 2;
							vert = vert + 2;
						else
							map[x][y] = "porta";
							local desenho = scene.items:addUserDrawing("background");
							desenho.x = (x-1) * size;
							desenho.y = (y-1) * size;

							local opGrafica = desenho.canvas:addPath();
							opGrafica.x = 0;
							opGrafica.y = 0; 
							opGrafica.width = 1;               
							opGrafica.height = 1;
							opGrafica.color = "orange";

							opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
						end;
					elseif map[x][y] == "nada" then
						map[x][y] = "corredor";
						local desenho = scene.items:addUserDrawing("background");
						desenho.x = (x-1) * size;
						desenho.y = (y-1) * size;

						local opGrafica = desenho.canvas:addPath();
						opGrafica.x = 0;
						opGrafica.y = 0; 
						opGrafica.width = 1;               
						opGrafica.height = 1;
						opGrafica.color = "gold";

						opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";

						corredoresNum = corredoresNum +1;
						corredores[corredoresNum] = {x=x, y=y};
					end;
				end;
			end;

			-- Gera paredes dos corredores [PAREDE]
			for i=1, corredoresNum, 1 do
				local cx = corredores[i].x;
				local cy = corredores[i].y;

				for x=-1, 1, 1 do
					for y=-1, 1, 1 do
						local px = cx+x;
						local py = cy+y;
						if map[px][py] == "nada" then
							map[px][py] = "parede";
							local desenho = scene.items:addUserDrawing("background");
							desenho.x = (px-1) * size;
							desenho.y = (py-1) * size;

							local opGrafica = desenho.canvas:addPath();
							opGrafica.x = 0;
							opGrafica.y = 0; 
							opGrafica.width = 1;               
							opGrafica.height = 1;
							opGrafica.color = "red";

							opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
						end;
					end;
				end;
			end;

			-- Gera escadas [ESCADA]

			for i=1, escadas, 1 do
				local pos = math.random(centrosNum);
				local x = centros[pos].x;
				local y = centros[pos].y;
				if map[x][y] == "corredor" then
					map[x][y] = "escada";
					local desenho = scene.items:addUserDrawing("background");
					desenho.x = (x-1) * size;
					desenho.y = (y-1) * size;

					local opGrafica = desenho.canvas:addPath();
					opGrafica.x = 0;
					opGrafica.y = 0; 
					opGrafica.width = 1;               
					opGrafica.height = 1;
					opGrafica.color = "purple";

					opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
				elseif map[x][y] == "chao" then
					map[x][y] = "escada";
					local desenho = scene.items:addUserDrawing("background");
					desenho.x = (x-1) * size;
					desenho.y = (y-1) * size;

					local opGrafica = desenho.canvas:addPath();
					opGrafica.x = 0;
					opGrafica.y = 0; 
					opGrafica.width = 1;               
					opGrafica.height = 1;
					opGrafica.color = "purple";

					opGrafica.data = "M10 10 H 90 V 90 H 10 L 10 10";
				end;
			end;

			-- Posicionar os [TILES]
			local endTest = true;
			if endTest then
				for x=1, horzSquare, 1 do
					for y=1, vertSquare, 1 do
						if map[x][y] ~= "nada" then
							local token = scene.items:addToken("background");
							token.x = (x-1) * size;
							token.y = (y-1) * size;

							-- Descobre o que tem envolta do token que está sendo analisado
							local tl, t, tr, l, r, bl, b, br;
							if map[x-1]~= nil then
								tl =  map[x-1][y-1];
								l =  map[x-1][y];
								bl =  map[x-1][y+1];
							end;
							if map[x+1]~= nil then
								tr =  map[x+1][y-1];
								r =  map[x+1][y];
								br =  map[x+1][y+1];
							end;
							t = map[x][y-1];
							b = map[x][y+1];

							-- Define o tipo de tile e sua rotação
							if map[x][y] == "chao" or map[x][y] == "corredor" then
								if (t=="parede" or t=="borda") and (r=="parede" or r=="borda") and (b=="parede" or b=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/DCCHNTNH_328338.png";
								elseif (t=="parede" or t=="borda") and (l=="parede" or l=="borda") and (r=="parede" or r=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/DCCHNTNH_328338.png";
									token.image.rotation = 90;
								elseif (t=="parede" or t=="borda") and (l=="parede" or l=="borda") and (b=="parede" or b=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/DCCHNTNH_328338.png";
									token.image.rotation = 180;
								elseif (r=="parede" or r=="borda") and (l=="parede" or l=="borda") and (b=="parede" or b=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/DCCHNTNH_328338.png";
									token.image.rotation = 270;
								elseif (r=="parede" or r=="borda") and (l=="parede" or l=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/VBQRSILF_328334.png";
									token.image.rotation = 90;
								elseif (t=="parede" or t=="borda") and (b=="parede" or b=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/VBQRSILF_328334.png";
								elseif (t=="parede" or t=="borda") and (l=="parede" or l=="borda") then
									if (br=="parede" or br=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/CHKWJATW_328360.png";
									else 
										token.image.url = "http://firecast.blob.core.windows.net/blobs/RKDFSJOR_328336.png";
									end;
								elseif (b=="parede" or b=="borda") and (l=="parede" or l=="borda") then
									if (tr=="parede" or tr=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/CHKWJATW_328360.png";
									else 
										token.image.url = "http://firecast.blob.core.windows.net/blobs/RKDFSJOR_328336.png";
									end;
									token.image.rotation = 90;
								elseif (t=="parede" or t=="borda") and (r=="parede" or r=="borda") then
									if (bl=="parede" or bl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/CHKWJATW_328360.png";
									else 
										token.image.url = "http://firecast.blob.core.windows.net/blobs/RKDFSJOR_328336.png";
									end;
									token.image.rotation = 270;
								elseif (b=="parede" or b=="borda") and (r=="parede" or r=="borda") then
									if (tl=="parede" or tl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/CHKWJATW_328360.png";
									else 
										token.image.url = "http://firecast.blob.core.windows.net/blobs/RKDFSJOR_328336.png";
									end;
									token.image.rotation = 180;
								elseif (t=="parede" or t=="borda") then
									if (br=="parede" or br=="borda") and (bl=="parede" or bl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/OUICQAEA_328330.png";
									elseif (br=="parede" or br=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/MFRICDNQ_328364.png";
									elseif (bl=="parede" or bl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/FALFKGFW_328365.png";
									else 
										token.image.url = "http://firecast.blob.core.windows.net/blobs/SUJINTTV_328324.png";
									end;
								elseif (l=="parede" or l=="borda") then
									if (tr=="parede" or tr=="borda") and (br=="parede" or br=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/OUICQAEA_328330.png";
									elseif (br=="parede" or br=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/MFRICDNQ_328364.png";
									elseif (tr=="parede" or tr=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/FALFKGFW_328365.png";
									else 
										token.image.url = "http://firecast.blob.core.windows.net/blobs/SUJINTTV_328324.png";
									end;
									token.image.rotation = 90;
								elseif (b=="parede" or b=="borda") then
									if (tr=="parede" or tr=="borda") and (tl=="parede" or tl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/OUICQAEA_328330.png";
									elseif (tr=="parede" or tr=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/MFRICDNQ_328364.png";
									elseif (tl=="parede" or tl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/FALFKGFW_328365.png";
									else 
										token.image.url = "http://firecast.blob.core.windows.net/blobs/SUJINTTV_328324.png";
									end;
									token.image.rotation = 180;
								elseif (r=="parede" or r=="borda") then
									if (bl=="parede" or bl=="borda") and (tl=="parede" or tl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/OUICQAEA_328330.png";
									elseif (tl=="parede" or tl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/MFRICDNQ_328364.png";
									elseif (bl=="parede" or bl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/FALFKGFW_328365.png";
									else 
										token.image.url = "http://firecast.blob.core.windows.net/blobs/SUJINTTV_328324.png";
									end;
									token.image.rotation = 270;
								else 
									if (tl=="parede" or tl=="borda") and (tr=="parede" or tr=="borda") and (bl=="parede" or bl=="borda") and (br=="parede" or br=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/EQDFPEFJ_328323.png";
									elseif (tl=="parede" or tl=="borda") and (tr=="parede" or tr=="borda") and (br=="parede" or br=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/MKBOEQSN_328560.png";
									elseif (bl=="parede" or bl=="borda") and (tr=="parede" or tr=="borda") and (br=="parede" or br=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/MKBOEQSN_328560.png";
										token.image.rotation = 90;
									elseif (bl=="parede" or bl=="borda") and (tl=="parede" or tl=="borda") and (br=="parede" or br=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/MKBOEQSN_328560.png";
										token.image.rotation = 180;
									elseif (bl=="parede" or bl=="borda") and (tl=="parede" or tl=="borda") and (tr=="parede" or tr=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/MKBOEQSN_328560.png";
										token.image.rotation = 270;
									elseif (bl=="parede" or bl=="borda") and (tr=="parede" or tr=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/RKJUVLDJ_328561.png";
									elseif (tl=="parede" or tl=="borda") and (br=="parede" or br=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/RKJUVLDJ_328561.png";
										token.image.rotation = 90;
									elseif (tl=="parede" or tl=="borda") and (tr=="parede" or tr=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/KEUMVLIT_328361.png";
									elseif (tl=="parede" or tl=="borda") and (bl=="parede" or bl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/KEUMVLIT_328361.png";
										token.image.rotation = 90;
									elseif (br=="parede" or br=="borda") and (bl=="parede" or bl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/KEUMVLIT_328361.png";
										token.image.rotation = 180;
									elseif (tl=="parede" or tl=="borda") and (bl=="parede" or bl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/KEUMVLIT_328361.png";
										token.image.rotation = 270;
									elseif (br=="parede" or br=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/DIGAMPSO_328538.png";
									elseif (tr=="parede" or tr=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/DIGAMPSO_328538.png";
										token.image.rotation = 90;
									elseif (tl=="parede" or tl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/DIGAMPSO_328538.png";
										token.image.rotation = 180;
									elseif (bl=="parede" or bl=="borda") then
										token.image.url = "http://firecast.blob.core.windows.net/blobs/DIGAMPSO_328538.png";
										token.image.rotation = 270;
									else
										token.image.url = "http://firecast.blob.core.windows.net/blobs/KKVCTGSV_328328.png";
									end;
								end;								
							elseif map[x][y] == "parede" then
								if (b=="parede" or b=="borda") and (t=="parede" or t=="borda") and (l=="parede" or l=="borda") and (r=="parede" or r=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/ERKWBFJS_328345.png";
								elseif (b=="parede" or b=="borda") and (l=="parede" or l=="borda") and (r=="parede" or r=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/LBOAERRP_328342.png";
								elseif (b=="parede" or b=="borda") and (t=="parede" or t=="borda") and (r=="parede" or r=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/LBOAERRP_328342.png";
									token.image.rotation = 90;
								elseif (l=="parede" or l=="borda") and (t=="parede" or t=="borda") and (r=="parede" or r=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/LBOAERRP_328342.png";
									token.image.rotation = 180;
								elseif (l=="parede" or l=="borda") and (t=="parede" or t=="borda") and (b=="parede" or b=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/LBOAERRP_328342.png";
									token.image.rotation = 270;
								elseif (l=="parede" or l=="borda") and (r=="parede" or r=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/IRSBUCLP_328346.png";
								elseif (t=="parede" or t=="borda") and (b=="parede" or b=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/IRSBUCLP_328346.png";
									token.image.rotation = 90;
								elseif (r=="parede" or r=="borda") and (b=="parede" or b=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/SDMDKCTL_328344.png";
								elseif (r=="parede" or r=="borda") and (t=="parede" or t=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/SDMDKCTL_328344.png";
									token.image.rotation = 90;
								elseif (l=="parede" or l=="borda") and (t=="parede" or t=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/SDMDKCTL_328344.png";
									token.image.rotation = 180;
								elseif (l=="parede" or l=="borda") and (b=="parede" or b=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/SDMDKCTL_328344.png";
									token.image.rotation = 270;
								elseif (l=="parede" or l=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/HKWNFCIW_328340.png";
								elseif (b=="parede" or b=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/HKWNFCIW_328340.png";
									token.image.rotation = 90;
								elseif (r=="parede" or r=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/HKWNFCIW_328340.png";
									token.image.rotation = 180;
								elseif (t=="parede" or t=="borda") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/HKWNFCIW_328340.png";
									token.image.rotation = 270;
								else
									token.image.url = "http://firecast.blob.core.windows.net/blobs/CVFPGFHI_328350.png";
								end;
							elseif map[x][y] == "borda" then
								if b == "borda" and t == "borda" and (l=="parede" or r=="parede") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/LBOAERRP_328342.png";
									if l=="parede" then
										token.image.rotation = 270;
									else
										token.image.rotation = 90;
									end;
								elseif r == "borda" and l == "borda" and (b=="parede" or t=="parede") then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/LBOAERRP_328342.png";
									if t=="parede" then
										token.image.rotation = 180;
									end;
								elseif b == "borda" and t == "borda" then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/IRSBUCLP_328346.png";
									token.image.rotation = 90;
								elseif r == "borda" and l == "borda" then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/IRSBUCLP_328346.png";
								elseif r == "entrada" then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/HKWNFCIW_328340.png";
								elseif l == "entrada" then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/HKWNFCIW_328340.png";
									token.image.rotation = 180;
								elseif b == "entrada" then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/HKWNFCIW_328340.png";
									token.image.rotation = 270;
								elseif t == "entrada" then
									token.image.url = "http://firecast.blob.core.windows.net/blobs/HKWNFCIW_328340.png";
									token.image.rotation = 90;
								else
									token.image.url = "http://firecast.blob.core.windows.net/blobs/SDMDKCTL_328344.png";
									if b~=nil and l~=nil then
										token.image.rotation = 270;
									elseif t~=nil and l~=nil then
										token.image.rotation = 180;
									elseif t~=nil and r~=nil then
										token.image.rotation = 90;
									end;
								end;
							elseif map[x][y] == "porta" then
								token.image.url = "http://firecast.blob.core.windows.net/blobs/LLBKLNNN_328371.png";
								if (b == "parede" or b =="porta") and (t == "parede" or t=="porta") then
									token.image.rotation = 90;
								end;
							elseif map[x][y] == "escada" then
								token.image.url = "http://firecast.blob.core.windows.net/blobs/VGRUNOJU_328508.png";
							elseif map[x][y] == "entrada" then
								token.image.url = "http://firecast.blob.core.windows.net/blobs/NSVRSNLG_328370.png";
								if b== "borda" and t == "borda" then
									token.image.rotation = 90;
								end;
							end;
						end;
					end;
				end;
			end;

			self:close();
		end;
		
		function self:processarCancel()
			self:close();
		end;
		]]>
	</script>
	
	<event name="onKeyUp">	
		if (event.keyCode == 0x89) or (event.keyCode == 0x1B) then
			setTimeout(
				function()
					self:processarCancel();
				end, 1);
			
			event.keyCode = 0;
			event.key = "";
		end;
	</event>	
	
	<event name="onCancelRequest">
		self:processarCancel();
	</event>
	
</popupForm>